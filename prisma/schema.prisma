// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  cellphone String    @unique
  cpfCnpj   Int       @unique @map("cpf_cnpj")
  birthDate DateTime  @map("birth_date")
  isCompany Boolean   @default(false) @map("is_company")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  request   Order[]
  provider  Provider?

  @@map("user")
}

model Order {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id])
  userId      String      @map("user_id")
  service     String     
  status      Status      @default(OPENED)
  title       String
  description String
  address     String
  createdaAt  DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  deletedAt   DateTime?   @map("deleted_at")
  candidacy   Candidacy[]

  @@map("order")
}

model Candidacy {
  id         Int       @id @default(autoincrement())
  request    Order     @relation(fields: [requestId], references: [id])
  requestId  Int       @map("request_id")
  provider   Provider  @relation(fields: [providerId], references: [id])
  providerId Int       @map("provider_id")
  createdaAt DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  @@map("candidacy")
}

model Provider {
  id              Int               @id @default(autoincrement())
  user            User              @relation(fields: [userId], references: [id])
  userId          String            @unique
  fantasyName     String            @map("fantasy_name")
  address         String
  experiences     Json
  formations      Json
  socialNetworks  Json              @map("social_networks")
  createdaAt      DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")
  deletedAt       DateTime?         @map("deleted_at")
  candidacy       Candidacy[]
  providerService ProviderService[]

  @@map("provider")
}

model ProviderService {
  id         Int      @id @default(autoincrement())
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  Int      @map("service_id")
  provider   Provider @relation(fields: [providerId], references: [id])
  providerId Int      @map("provider_id")

  @@map("provider_service")
}

model Service {
  id                     Int               @id @default(autoincrement())
  name                   String            @unique
  createdaAt             DateTime          @default(now()) @map("created_at")
  updatedAt              DateTime          @updatedAt @map("updated_at")
  serviceProviderService ProviderService[]

  @@map("service")
}

enum Status {
  OPENED
  NEGOTIATION
  CLOSED
}
